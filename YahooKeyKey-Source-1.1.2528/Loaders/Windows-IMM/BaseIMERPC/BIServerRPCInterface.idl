[
uuid(6876e464-0a80-4684-9fa6-bd8386c15060),
version(1.0),
implicit_handle (handle_t BIServerRPCInterfaceGlobalHandle)
]
interface BIServerRPCInterface
{
	const wchar_t BISCandidateListSeparator = 0xffff;
	const unsigned int BISMaxStringLength = 4096;
	typedef [context_handle] void *BISContext;

	boolean BISOpenConnection([out, ref] BISContext *contextPtr);
	void BISCloseConnection([in, out, ref] BISContext *contextPtr);
	void BISPing([in] BISContext paramContext);

	void BISShowStatusBar([in] BISContext paramContext);
	void BISHideStatusBar([in] BISContext paramContext);
	void BISShowInputBuffer([in] BISContext paramContext);
	void BISHideInputBuffer([in] BISContext paramContext);
	void BISSetInputBufferPosition([in] BISContext paramContext, [in] int cursorPosX, [in] int cursorPosY);
	void BISSetInputBufferTraits([in] BISContext paramContext, [in] long fontSize);
	void BISSetCandidatePanelPosition([in] BISContext paramContext, [in] int cursorPosX, [in] int cursorPosY);
	void BISShowCandidatePanel([in] BISContext paramContext);
	void BISHideCandidatePanel([in] BISContext paramContext);
	void BISHideToolTip([in] BISContext paramContext);

    void BISActivate([in] BISContext paramContext, [in] boolean stopServerSideUI, [out, string, size_is(BISMaxStringLength)] wchar_t *currentInputMethodName, [out] int *statusBarPosX, [out] int *statusBarPosY);
    void BISDeactivate([in] BISContext paramContext, [out, string, size_is(BISMaxStringLength)] wchar_t *residueString);

	void BISClearContextState([in] BISContext paramContext);
	
    boolean BISHandleKey(
        [in] BISContext paramContext,
        [in] unsigned int keyCode,
        [in] unsigned int keyModifiers,
        [out, string, size_is(BISMaxStringLength)] wchar_t *committedString,
        [out, string, size_is(BISMaxStringLength)] wchar_t *combinedCompositionString,
        [out, string, size_is(BISMaxStringLength)] wchar_t *combinedCompositionStringAttribute,
        [out, string, size_is(BISMaxStringLength)] wchar_t *compositionString,
        [out, string, size_is(BISMaxStringLength)] wchar_t *readingString,
        [out, string, size_is(BISMaxStringLength)] wchar_t *candidatePageAsString,
        [out, string, size_is(BISMaxStringLength)] wchar_t *candidatePageKeyString,
        [out, string, size_is(BISMaxStringLength)] wchar_t *actionVerb,
        [out, string, size_is(BISMaxStringLength)] wchar_t *actionParameter,
        [out] unsigned int  *cursorPosition,
        [out] boolean *isCandidatePanelVisible,
        [out] boolean *shouldUpdateCandidatePanel,
        [out] unsigned int* highlightedCandidateIndex);

    void BISNextAvailableClientRPCEndpointName([in] BISContext paramContext, [out, string, size_is(BISMaxStringLength)] wchar_t *endpointName);
    void BISSetCurrentClientRPCEndpoint([in] BISContext paramContext, [in, string, size_is(BISMaxStringLength)] const wchar_t *endpointName);
    void BISEndCurrentClientRPCEndpoint([in] BISContext paramContext);
    
    void BISOpenPreferences([in] BISContext paramContext);
    void BISClosePreferences([in] BISContext paramContext);
    
    void BISShutdownServer([in] BISContext paramContext);
    void BISShutdownServerForDatabaseUpdate([in] BISContext paramContext);
    void BISRestartServerAndCompleteDatabaseUpdate([in] BISContext paramContext);

    boolean BISSendCustomerServiceEmail([in] BISContext paramContext, [in, string, size_is(BISMaxStringLength)] const wchar_t *email);
    boolean BISImportUserPhraseDB([in] BISContext paramContext, [in, string, size_is(BISMaxStringLength)] const wchar_t *filename);
    boolean BISExportUserPhraseDB([in] BISContext paramContext, [in, string, size_is(BISMaxStringLength)] const wchar_t *filename);
    boolean BISValidateFile([in] BISContext paramContext, 
        [in, string, size_is(BISMaxStringLength)] const wchar_t *packageFilename,
        [in, string, size_is(BISMaxStringLength)] const wchar_t *signatureFilename);
    void BISSendServiceMail([in] BISContext paramContext,
        [in, string, size_is(BISMaxStringLength)] const wchar_t *email,
        [in, string, size_is(BISMaxStringLength)] const wchar_t *description);

    // pass void, return void
    const wchar_t *BISFunctionSyncLoaderAndCurrentModuleConfig = L"BISFunctionSyncLoaderAndCurrentModuleConfig";
    const wchar_t *BISFunctionPhraseDBSave = L"BISFunctionPhraseDBSave";
    const wchar_t *BISFunctionStopUsingSignedModules = L"BISFunctionStopUsingSignedModules";
    const wchar_t *BISFunctionResumeUsingSignedModules = L"BISFunctionResumeUsingSignedModules";

    // pass void, return int
    const wchar_t *BISFunctionPhraseDBNumberOfRow = L"BISFunctionPhraseDBNumberOfRow";
    const wchar_t *BISFunctionGetNumberOfUnloadableSignedModules = L"BISFunctionGetNumberOfUnloadableSignedModules";

    // pass void, return boolean
    const wchar_t *BISFunctionPhraseDBCanProvideService = L"BISFunctionPhraseDBCanProvideService";
            
    // pass string and int, return void
    const wchar_t *BISFunctionPhraseDBSetNewReadingForPhraseAtRow = L"BISFunctionPhraseDBSetNewReadingForPhraseAtRow";
    const wchar_t *BISFunctionPhraseDBSetPhraseAtRow = L"BISFunctionPhraseDBSetPhraseAtRow"; 

    // pass int, return void
    const wchar_t *BISFunctionPhraseDBDeleteRow = L"BISFunctionPhraseDBDeleteRow";

    // pass string, return void
    const wchar_t *BISFunctionPhraseDBAddNewRow = L"BISFunctionPhraseDBAddNewRow";
    const wchar_t *BISFunctionForceSyncModuleConfig = L"BISFunctionForceSyncModuleConfig";
    const wchar_t *BISFunctionDeleteAllKeysAndValuesInModuleConfig = L"BISFunctionDeleteAllKeysAndValuesInModuleConfig";
    const wchar_t *BISFunctionToggleAroundFilter = L"BISFunctionToggleAroundFilter";

    // pass void, return string
    const wchar_t *BISFunctionGetDatabaseVersion = L"BISFunctionGetDatabaseVersion";
    const wchar_t *BISFunctionGetVersionInfoURL = L"BISFunctionGetVersionInfoURL";
    const wchar_t *BISFunctionGetVersionInfoSignatureURL = L"BISFunctionGetVersionInfoSignatureURL";
    const wchar_t *BISFunctionGetUserInfoForPOST = L"BISFunctionGetUserInfoForPOST";
    const wchar_t *BISFunctionGetUpdateAction = L"BISFunctionGetUpdateAction";
    const wchar_t *BISFunctionGetActionURL = L"BISFunctionGetActionURL";
    const wchar_t *BISFunctionGetSignatureURL = L"BISFunctionGetSignatureURL";
    const wchar_t *BISFunctionGetLocaleTaggedChangeLogURL = L"BISFunctionGetLocaleTaggedChangeLogURL";
    const wchar_t *BISFunctionGetPrimaryInputMethod = L"BISFunctionGetPrimaryInputMethod";
    const wchar_t *BISFunctionGetAllNonSystemGenericInputMethodsIDAndNames = L"BISFunctionGetAllNonSystemGenericInputMethodsIDAndNames";
    const wchar_t *BISFunctionGetUserFreeCannedMessagePath = L"BISFunctionGetUserFreeCannedMessagePath";
    const wchar_t *BISFunctionGetServerLocale = L"BISFunctionGetServerLocale";
    
    // pass int, return string
    const wchar_t *BISFunctionPhraseDBDataAtRow = L"BISFunctionPhraseDBDataAtRow";
    const wchar_t *BISFunctionGetLocalizedNameOfUnloadableSignedModulesAtIndex = L"BISFunctionGetLocalizedNameOfUnloadableSignedModulesAtIndex";
        
    // pass int, return bool
    const wchar_t *BISFunctionUnloadSignedModuleAtIndex = L"BISFunctionUnloadSignedModuleAtIndex";
    
        
    // pass string, return string
    const wchar_t *BISFunctionGetTemporaryFilename = L"BISFunctionGetTemporaryFilename";
    const wchar_t *BISFunctionPhraseDBReadingsForCharacter = L"BISFunctionPhraseDBReadingsForCharacter";

    // pass string, return bool
    const wchar_t *BISFunctionShouldUpdate = L"BISFunctionShouldUpdate";
    const wchar_t *BISFunctionIsAroundFilterEnabled = L"BISFunctionIsAroundFilterEnabled";
    const wchar_t *BISFunctionModuleWithWildcardNameExists = L"BISFunctionModuleWithWildcardNameExists";


    // pass string and string, return bool
    const wchar_t *BISFunctionValidateFile = L"BISFunctionValidateFile";

    // parr string and string, return string
    const wchar_t *BISFunctionStringValueForConfigKeyOfModule = L"BISFunctionStringValueForConfigKeyOfModule";
    
    // -----
    
    // pass void, return void / int / bool
    void BISStatelessFunctionVoid([in, string, size_is(BISMaxStringLength)] const wchar_t *function);
    int BISStatelessFunctionGetInt([in, string, size_is(BISMaxStringLength)] const wchar_t *function);
    boolean BISStatelessFunctionGetBool([in, string, size_is(BISMaxStringLength)] const wchar_t *function);
    
    // pass void, return string
    void BISStatelessFunctionGetString([in, string, size_is(BISMaxStringLength)] const wchar_t *function, [out, string, size_is(BISMaxStringLength)] wchar_t *output);
    
    // pass int, return string
    void BISStatelessFunctionGetStringWithInt([in, string, size_is(BISMaxStringLength)] const wchar_t *function, [out, string, size_is(BISMaxStringLength)] wchar_t *output, int param1);
    
    
    // pass string and int, return void
    void BISStatelessFunctionSetStringAndInt([in, string, size_is(BISMaxStringLength)] const wchar_t *function, [in, string, size_is(BISMaxStringLength)] const wchar_t *param1, int param2);
    
    // pass int, return void
    void BISStatelessFunctionSetInt([in, string, size_is(BISMaxStringLength)] const wchar_t *function, int param1);

    // pass int, return bool
    boolean BISStatelessFunctionGetBoolWithInt([in, string, size_is(BISMaxStringLength)] const wchar_t *function, int param1);
    
    // pass string, return void
    void BISStatelessFunctionSetString([in, string, size_is(BISMaxStringLength)] const wchar_t *function, [in, string, size_is(BISMaxStringLength)] const wchar_t *param1);
    
    // pass string, return string
    void BISStatelessFunctionGetStringWithString([in, string, size_is(BISMaxStringLength)] const wchar_t *function, [out, string, size_is(BISMaxStringLength)] wchar_t *output, [in, string, size_is(BISMaxStringLength)] const wchar_t *param1);

    // pass string, return bool
    boolean BISStatelessFunctionGetBoolWithString([in, string, size_is(BISMaxStringLength)] const wchar_t *function, [in, string, size_is(BISMaxStringLength)] const wchar_t *param1);

    // pass string and string, return bool
    boolean BISStatelessFunctionGetBoolWithStringAndString([in, string, size_is(BISMaxStringLength)] const wchar_t *function, [in, string, size_is(BISMaxStringLength)] const wchar_t *param1, [in, string, size_is(BISMaxStringLength)] const wchar_t *param2);

    // pass stirng and stirng, return string
    void BISStatelessFunctionGetStringWithStringAndString([in, string, size_is(BISMaxStringLength)] const wchar_t *function, [out, string, size_is(BISMaxStringLength)] wchar_t *output, [in, string, size_is(BISMaxStringLength)] const wchar_t *param1, [in, string, size_is(BISMaxStringLength)] const wchar_t *param2);
    
    
}
